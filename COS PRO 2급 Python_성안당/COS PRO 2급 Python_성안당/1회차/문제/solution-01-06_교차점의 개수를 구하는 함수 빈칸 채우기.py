# 문제 6. 교차점의 개수를 구하는 함수의 빈 칸 채우기
# 한 쪽 벽의 왼쪽 끝에서 반대편 오른쪽 끝으로 여러 개의 줄을 연결하려고 합니다.
# 왼쪽에는 n 개의 고리을 설치하고 오른쪽에는 5개의 고리를 설치하고 1 부터 5까지의 번호를 붙여두었습니다.
# 예를 들어 n 이 5 이고 왼쪽에서 오른쪽의 고리로 줄을 무작위로 연결한 모습은 다음과 같습니다.
# [그림]
# 이 때 줄이 교차되는 곳을 세어보니 곳에서 줄 겹침을 알 수 있었습니다.
# 왼쪽과 오른쪽의 고리를 줄로 연결하였을 때 줄이 겹치는 교차점이 몇 군데가 있을지를 미리 계산해보려고 합니다.
# 왼쪽 고리에서 연결할 오른쪽 고리의 번호를 저장한 리스트 rings 가 매개변수로 전달될 때 
# 줄이 교차되는 곳이 몇 군데인지를 return 하도록 solution 함수를 작성하려 합니다.
# 빈 칸을 채워 올바르게 동작하도록 완성해주세요

# 오른쪽 고리의 개수는 변하지 않으며 번호는 위에서 아래로 순차적으로 붙여 두었습니다.
# 왼쪽의 고리에는 하나의 줄만 연결할 수 있습니다.
# 오른쪽 고리에는 여러 개의 줄을 연결할 수 있습니다.

# 코드
def solution(left_rings):
    answer = 0
    for i in range(len(left_rings)):
        if left_rings[i] <= i:
            for k in range(______):
                if ______ > left_rings[i]:
                    answer += 1
    return answer

# 실행
leftrings = [5,4,3,2,1]
ret = solution(leftrings)
print( ret )
